#!/bin/bash

CONFIG_FILE="$HOME/.config/zk_scripts/config.yaml"

SCRIPT_DIR="$(dirname "${BASH_SOURCE[0]}")"
source "$SCRIPT_DIR/config_loader.sh"

load_config "$CONFIG_FILE" "zk_fzf" # Load config for bibbuild section (if any)

# Use configured variables, with defaults if not in config
getbibkeys_script="${MYBIN_DIR}/getbibkeys.sh"  # Default to mybin_dir/getbibkeys.sh if not configured
biblib_dir="${LIBRARY:-$NOTES_DIR/biblib}"      # Default to notes_dir/biblib if LIBRARY not set in config
notes_dir="${NOTES_DIR}"                        # notes_dir is essential, ensure it's configured
citekeylist_file="citekeylist"
bibliography_file="bibliography.json"
tmpBib=$(mktemp)

# Define a function to handle potential errors
error_handler() {
  echo "An error occurred in the script execution. Exiting now."
  exit 1
}

# Trap any errors and call the error handler function
trap error_handler ERR

# Check if the required directories exist
if [[ ! -d "$biblib_dir" || ! -d "$notes_dir" ]]; then
  echo "Required directories do not exist. Please check the paths:"
  echo "  biblib_dir: $biblib_dir"
  echo "  notes_dir: $notes_dir"
  exit 1
fi

# Run the getbibkeys script and output to both files
if [[ -x "$getbibkeys_script" ]]; then
  "$getbibkeys_script" > "$biblib_dir/$citekeylist_file"
  cp "$biblib_dir/$citekeylist_file" "$notes_dir/$citekeylist_file.md"
else
  echo "The getbibkeys script is not executable or not found at: $getbibkeys_script"
  echo "Please check the path and permissions, or configure it in config.yaml."
  exit 1
fi

# Add "@" at the start of each line in the citekeylist file located in the notes directory
sed -i 's/^/@/' "$notes_dir/$citekeylist_file.md"

# Process Markdown files and generate the bibliography JSON

jq '[ .[] |  select(.tags[]? | startswith("literature_note"))]' "$INDEX_FILE" > $tmpBib # Use INDEX_FILE from config

# Copy the generated bibliography JSON to the specified locations
cp "$tmpBib" "$biblib_dir/$bibliography_file"
cp "$tmpBib" "$HOME/Dropbox/bibliography.json" # Still using hardcoded Dropbox path, consider making this configurable

# Remove the temporary file
rm "$tmpBib"

echo "Script executed successfully."

